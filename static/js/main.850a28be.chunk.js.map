{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["BASIC_BUTTONS","button","id","format","ADV_BUTTONS","EVENT_KEY_MAP","Map","App","React","Component","Calculator","props","state","equation","answer","prevEquation","showingAnswer","history","historyIsVisible","handleButtonPress","bind","toggleHistory","setAnswerFromHistory","setEquationFromHistory","handleInput","handleKeyDown","document","addEventListener","this","removeEventListener","event","inputID","get","key","preventDefault","target","find","obj","updateState","equationString","join","test","evaluationString","replace","repeat","checkOpenParenthesis","length","ans","evaluate","isNaN","toExponential","parseFloat","toFixed","equationWithRealAns","map","ele","toString","concat","slice","brackets","openBrackets","expFound","expEnded","i","setState","str","stack","push","pop","index","parentElement","equationLastChar","addToEquation","showAnswer","keysArray","onClick","equationStr","className","title","CalcKeys","buttons","Display","formatEquationStr","retStr","start","totalOpenBrackets","dangerouslySetInnerHTML","__html","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.850a28be.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./App.css\";\nimport { evaluate } from \"mathjs\";\n\nconst BASIC_BUTTONS = [\n  {\n    button: \"=\",\n    id: \"equals\",\n    format: null\n  },\n  {\n    button: \"+\",\n    id: \"add\",\n    format: \"+\"\n  },\n  {\n    button: \"-\",\n    id: \"subtract\",\n    format: \"-\"\n  },\n  {\n    button: \"×\",\n    id: \"multiply\",\n    format: \"*\"\n  },\n  {\n    button: \"÷\",\n    id: \"divide\",\n    format: \"/\"\n  },\n  {\n    button: \".\",\n    id: \"decimal\",\n    format: \".\"\n  },\n  {\n    button: \")\",\n    id: \"r-bracket\",\n    format: \")\"\n  },\n  {\n    button: \"(\",\n    id: \"l-bracket\",\n    format: \"(\"\n  },\n  {\n    button: \"0\",\n    id: \"zero\",\n    format: \"0\"\n  },\n  {\n    button: \"1\",\n    id: \"one\",\n    format: \"1\"\n  },\n  {\n    button: \"2\",\n    id: \"two\",\n    format: \"2\"\n  },\n  {\n    button: \"3\",\n    id: \"three\",\n    format: \"3\"\n  },\n  {\n    button: \"4\",\n    id: \"four\",\n    format: \"4\"\n  },\n  {\n    button: \"5\",\n    id: \"five\",\n    format: \"5\"\n  },\n  {\n    button: \"6\",\n    id: \"six\",\n    format: \"6\"\n  },\n  {\n    button: \"7\",\n    id: \"seven\",\n    format: \"7\"\n  },\n  {\n    button: \"8\",\n    id: \"eight\",\n    format: \"8\"\n  },\n  {\n    button: \"9\",\n    id: \"nine\",\n    format: \"9\"\n  },\n  {\n    button: \"CE\",\n    id: \"clear-ele\",\n    format: null\n  },\n  {\n    button: \"C\",\n    id: \"clear\",\n    format: null\n  }\n];\nconst ADV_BUTTONS = [\n  {\n    button: \"mod\",\n    id: \"mod\",\n    format: \"%\"\n  },\n  {\n    button: \"x!\",\n    id: \"factorial\",\n    format: \"!\"\n  },\n  {\n    button: \"ln\",\n    id: \"ln\",\n    format: \"log(\" // math.js log() defaults to base e\n  },\n  {\n    button: \"log\",\n    id: \"log\",\n    format: \"log10(\"\n  },\n  {\n    button: \"√\",\n    id: \"sqrt\",\n    format: \"sqrt(\"\n  },\n  {\n    button: \"x\\u207F\",\n    id: \"exponent\",\n    format: \"^\"\n  },\n  {\n    button: \"sin\",\n    id: \"sin\",\n    format: \"sin(\"\n  },\n  {\n    button: \"cos\",\n    id: \"cos\",\n    format: \"cos(\"\n  },\n  {\n    button: \"tan\",\n    id: \"tan\",\n    format: \"tan(\"\n  },\n  {\n    button: \"π\",\n    id: \"pi\",\n    format: \"pi\"\n  },\n  {\n    button: \"e\",\n    id: \"e\",\n    format: \"e\"\n  },\n  {\n    button: \"Ans\",\n    id: \"ans\",\n    format: \"Ans\"\n  }\n];\nconst EVENT_KEY_MAP = new Map([\n  ['0', 'zero'],\n  ['1', 'one'],\n  ['2', 'two'],\n  ['3', 'three'],\n  ['4', 'four'],\n  ['5', 'five'],\n  ['6', 'six'],\n  ['7', 'seven'],\n  ['8', 'eight'],\n  ['9', 'nine'],\n  ['(', 'l-bracket'],\n  [')', 'r-bracket'],\n  ['=', 'equals'],\n  ['Enter', 'equals'],\n  ['Backspace', 'clear-ele'],\n  ['Delete', 'clear'],\n  ['+', 'add'],\n  ['-', 'subtract'],\n  ['*', 'multiply'],\n  ['/', 'divide'],\n  ['%', 'mod'],\n  ['.', 'decimal'],\n  ['p', 'pi'],\n  ['e', 'e'],\n  ['q', 'sqrt'],\n  ['l', 'ln'],\n  ['g', 'log'],\n  ['c', 'cos'],\n  ['s', 'sin'],\n  ['t', 'tan'],\n  ['a', 'ans'],\n  ['!', 'factorial'],\n  ['^', 'exponent']\n]);\nconst DECIMAL_PLACES = 10;\n\nclass App extends React.Component {\n  render() {\n    return (\n      <div>\n        <Calculator />\n      </div>\n    );\n  }\n}\n\nclass Calculator extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      equation: [],\n      answer: \"\",\n      prevEquation: [],\n      showingAnswer: false,\n      history: [],\n      historyIsVisible: false\n    };\n\n    this.handleButtonPress = this.handleButtonPress.bind(this);\n    this.toggleHistory = this.toggleHistory.bind(this);\n    this.setAnswerFromHistory = this.setAnswerFromHistory.bind(this);\n    this.setEquationFromHistory = this.setEquationFromHistory.bind(this);\n    this.handleInput = this.handleInput.bind(this);\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n  }\n\n  componentDidMount() {\n    document.addEventListener('keydown', this.handleKeyDown);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keydown', this.handleKeyDown);\n  }\n\n  handleKeyDown(event) {\n    const inputID = EVENT_KEY_MAP.get(event.key);\n\n    if(inputID) {\n      event.preventDefault();\n      this.handleInput(inputID);\n    }\n  }\n\n  handleButtonPress(event) {\n    this.handleInput(event.target.id);\n  }\n\n  handleInput(inputID) {\n    let format = [...BASIC_BUTTONS, ...ADV_BUTTONS].find(obj => obj.id === inputID)\n      .format;\n    let updateState = {};\n    let equationString = this.state.equation.join(\"\");\n\n    switch (inputID) {\n      case \"equals\":\n        if (!/[*%(/+-]$/.test(equationString)) {\n          let evaluationString = equationString\n            .replace(/\\(*$/, \"\")\n            .replace(/Ans/g, this.state.answer);\n\n          evaluationString += \")\".repeat(\n            this.checkOpenParenthesis(evaluationString)\n          );\n\n          if (evaluationString.length > 0) {\n            let ans = evaluate(evaluationString);\n\n            // if evaluate failed...\n            if (isNaN(ans)) {\n              updateState = {\n                answer: \"error\",\n                showingAnswer: true,\n                prevEquation: this.state.equation,\n                equation: []\n              };\n            } else {\n              // if ans is exponential format -> reconvert it with decimal places limited\n              // else -> limit decimal places normally\n              if (/e\\+/.test(ans)) ans = ans.toExponential(DECIMAL_PLACES);\n              else ans = parseFloat(ans.toFixed(DECIMAL_PLACES));\n              // Update answer state, toggle the showingAnswer bool to true,\n              // move the equation to prevEquation, and reset the equation string.\n              const equationWithRealAns = this.state.equation.map(ele =>\n                ele === \"Ans\" ? this.state.answer : ele\n              );\n              updateState = {\n                answer: ans.toString(),\n                prevEquation: equationWithRealAns,\n                equation: [],\n                showingAnswer: true,\n                history: this.state.history.concat({\n                  equation: equationWithRealAns,\n                  answer: ans.toString()\n                })\n              };\n            }\n          }\n        }\n        break;\n      case \"clear-ele\":\n        // Remove last element from equation array\n        updateState = {\n          equation: this.state.equation.slice(0, -1),\n          showingAnswer: false\n        };\n        break;\n      case \"clear\":\n        // Reset equation array\n        updateState = { equation: [], showingAnswer: false };\n        break;\n      case \"decimal\":\n        // If the equation DOESN'T already have a decimal in the last number, add a decimal.\n        if (!/(\\d*\\.\\d*)$/.test(equationString))\n          updateState = {\n            equation: this.state.equation.concat(format),\n            showingAnswer: false\n          };\n        break;\n      case \"r-bracket\":\n        // Only insert if there are any open parenthesis, and the preceding character is a number or a bracket.\n        if (\n          this.checkOpenParenthesis(equationString) &&\n          /[\\d)]$|(Ans|e|pi)$/.test(equationString)\n        )\n          updateState = { equation: this.state.equation.concat(format) };\n        break;\n      case \"divide\":\n      case \"multiply\":\n      case \"add\":\n      case \"mod\":\n        if (!/[*/+%]-$|\\($|\\(-$|\\^$/.test(equationString)) {\n          // If previous character is a function symbol already change simply swap it with\n          // the inputted function symbol.\n          if (/(\\*|\\+|-|\\/|%)$/.test(equationString))\n            updateState = {\n              equation: this.state.equation.slice(0, -1).concat(format),\n              showingAnswer: false\n            };\n          // If we just pressed '=' and are now inputting an operator, we want to chain\n          // the previous answer into this new equation.\n          else if (this.state.showingAnswer)\n            updateState = {\n              equation: [this.state.answer, format],\n              showingAnswer: false\n            };\n          else if (this.state.equation.length === 0)\n            updateState = { equation: [0, format], showingAnswer: false };\n          else\n            updateState = {\n              equation: this.state.equation.concat(format),\n              showingAnswer: false\n            };\n        }\n        break;\n      case \"subtract\":\n        // Don't allow input if previous char is '-' or % (no negative number mod with this calc).\n        if (!/[-%]$/.test(equationString))\n          if (this.state.showingAnswer)\n            updateState = {\n              equation: [this.state.answer, format],\n              showingAnswer: false\n            };\n          // If previous char is a + just switch it with this '-' since there's no point\n          // doing 3 + -3 instead of just 3 - 3, for example.\n          else if (/\\+$/.test(equationString))\n            updateState = {\n              equation: this.state.equation.slice(0, -1).concat(format),\n              showingAnswer: false\n            };\n          else if (this.state.showingAnswer)\n            updateState = {\n              equation: [this.state.answer, format],\n              showingAnswer: false\n            };\n          else\n            updateState = {\n              equation: this.state.equation.concat(format),\n              showingAnswer: false\n            };\n        break;\n      case \"exponent\":\n        // If either of these situations exist in the equation, don't allow another exponent:\n        // 1: A ^ is present followed by brackets that don't close\n        // 2: A ^ is present followed by numbers straight to the end of the string\n        if (!/\\^$|\\($|[*%/+-.]$/.test(equationString)) {\n          // If equation is empty, add 0 and exponent and then break, we're done.\n          if (this.state.equation.length === 0) {\n            updateState = {\n              equation: this.state.equation.concat([0, format]),\n              showingAnswer: false\n            };\n            break;\n          }\n          // Make sure we're not currently typing in an exponent... if we are, don't allow another\n          // exponent input (this calculator won't handle exponents of exponents).\n          let brackets = false;\n          let openBrackets = 0;\n          let expFound = false;\n          let expEnded = true;\n          // If we find a ^ in the equation then an exponent has been started.\n          // It might be using brackets ^() or just a number ^123. We decide which\n          // case it is here.\n          for (let i = 0; i < this.state.equation.length; i++) {\n            if (this.state.equation[i] === \"^\") {\n              expFound = true;\n              expEnded = false;\n              this.state.equation[i + 1] === \"(\"\n                ? (brackets = true)\n                : (brackets = false);\n              i++; // We can progress to the index after the ^ immediately\n            }\n            // If it's a bracket exponent, track the opening and closing of brackets until\n            // they match up (openBrackets == 0)... once they match up the exponent has ended.\n            if (expFound && brackets) {\n              if (this.state.equation[i] === \"(\") openBrackets++;\n              if (this.state.equation[i] === \")\") openBrackets--;\n              if (openBrackets === 0) {\n                brackets = false;\n                expEnded = true;\n                expFound = false;\n              }\n            }\n            // If it's a non-bracket exponent we just have to look out for the next\n            // non number... at that point the exponent ended.\n            else if (\n              expFound &&\n              isNaN(this.state.equation[i]) &&\n              !/Ans|e|pi/.test(this.state.equation[i])\n            ) {\n              expEnded = true;\n              expFound = false;\n            }\n          }\n          // If we've gone through the whole equation and we're not currently in an un-ended exponent\n          // we can go ahead and add an exponent to the equation.\n          if (expEnded)\n            updateState = {\n              equation: this.state.equation.concat(format),\n              showingAnswer: false\n            };\n        }\n        break;\n      case \"factorial\":\n        if (/[)\\d]$|(Ans|e|pi)$/.test(equationString))\n          updateState = {\n            equation: this.state.equation.concat(format),\n            showingAnswer: false\n          };\n        break;\n      case \"ans\":\n        if (this.state.answer !== \"\" && this.state.answer !== \"error\") {\n          if (/[)\\d]$|(Ans|e|pi)$/.test(equationString))\n            updateState = {\n              equation: this.state.equation.concat([\"*\", format]),\n              showingAnswer: false\n            };\n          // Don't allow Ans following % if Ans is negative!\n          else if (!(/%$/.test(equationString) && this.state.answer[0] === \"-\"))\n            updateState = {\n              equation: this.state.equation.concat(format),\n              showingAnswer: false\n            };\n        }\n        break;\n      default:\n        // If last digit is 0 and the preceding element isn't a number or '.', change\n        // the 0 to our input because we don't want to have leading 0s on a number.\n        if (\n          this.state.equation[this.state.equation.length - 1] === \"0\" &&\n          isNaN(this.state.equation[this.state.equation.length - 2]) &&\n          this.state.equation[this.state.equation.length - 2] !== \".\"\n        )\n          updateState = {\n            equation: this.state.equation.slice(0, -1).concat(format),\n            showingAnswer: false\n          };\n        else if (\n          this.state.equation[this.state.equation.length - 1] === \")\" &&\n          !isNaN(format)\n        )\n          updateState = {\n            equation: this.state.equation.concat([\"*\", format]),\n            showingAnswer: false\n          };\n        else if (\n          this.state.equation[this.state.equation.length - 1] === \"e\" ||\n          this.state.equation[this.state.equation.length - 1] === \"Ans\" ||\n          this.state.equation[this.state.equation.length - 1] === \"pi\"\n        ) {\n          updateState = {\n            equation: this.state.equation.concat([\"*\", format]),\n            showingAnswer: false\n          };\n        } else\n          updateState = {\n            equation: this.state.equation.concat(format),\n            showingAnswer: false\n          };\n        break;\n    }\n    this.setState(updateState);\n  }\n  \n  // Calculate number of open parenthesis\n  checkOpenParenthesis(str) {\n    var stack = [];\n    for (var i = 0; i < str.length; i++) {\n      if (str[i] === \"(\" || str[i] === \"{\" || str[i] === \"[\")\n        stack.push(str[i]);\n      else if (str[i] === \")\") {\n        if (stack.pop() !== \"(\") {\n          return false;\n        }\n      } else if (str[i] === \"}\") {\n        if (stack.pop() !== \"{\") {\n          return false;\n        }\n      } else if (str[i] === \"]\") {\n        if (stack.pop() !== \"[\") {\n          return false;\n        }\n      }\n    }\n    return stack.length;\n  }\n\n  toggleHistory() {\n    this.setState({ historyIsVisible: !this.state.historyIsVisible });\n  }\n\n  setEquationFromHistory(event) {\n    const index = event.target.parentElement.id;\n    this.setState({\n      equation: this.state.history[index].equation,\n      showingAnswer: false,\n      answer: \"\"\n    });\n  }\n\n  setAnswerFromHistory(event) {\n    const index = event.target.parentElement.id;\n    const equationLastChar = this.state.equation.join(\"\").slice(-1);\n    let addToEquation = this.state.history[index].answer;\n    if (equationLastChar !== \"(\" && this.state.equation.length > 0)\n      addToEquation = \"*\" + addToEquation;\n    this.setState({\n      equation: this.state.equation.concat(addToEquation),\n      showingAnswer: false,\n      answer: \"\"\n    });\n  }\n\n  render() {\n    return (\n      <div id=\"calculator\">\n        <Display\n          answer={this.state.answer}\n          equation={this.state.equation.join(\"\")}\n          prevEquation={this.state.prevEquation.join(\"\")}\n          showAnswer={this.state.showingAnswer}\n        />\n        <div id=\"button-container\">\n          <CalcKeys\n            id=\"adv-calc-keys\"\n            keysArray={ADV_BUTTONS}\n            onClick={this.handleButtonPress}\n          />\n          <CalcKeys\n            id=\"basic-calc-keys\"\n            keysArray={BASIC_BUTTONS}\n            onClick={this.handleButtonPress}\n          />\n          <div id=\"history-button-area\">\n            {this.state.historyIsVisible && (\n              <div id=\"history\">\n                {this.state.history.map((ele, index) => {\n                  const visibleEquationLength = 30;\n                  let equationStr = ele.equation.join(\"\");\n                  if (equationStr.length > visibleEquationLength)\n                    equationStr =\n                      equationStr.slice(0, visibleEquationLength) + \"...\";\n                  return (\n                    <div className=\"history-item\" id={index} key={index}>\n                      {equationStr.length > visibleEquationLength ? (\n                        <p\n                          title={ele.equation.join(\"\")}\n                          onClick={this.setEquationFromHistory}\n                        >\n                          {equationStr}\n                        </p>\n                      ) : (\n                        <p onClick={this.setEquationFromHistory}>\n                          {equationStr}\n                        </p>\n                      )}\n                      <p onClick={this.setAnswerFromHistory}>\n                        {\"=\" + ele.answer}\n                      </p>\n                    </div>\n                  );\n                })}\n              </div>\n            )}\n            <button id=\"history-button\" onClick={this.toggleHistory}>History</button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nclass CalcKeys extends React.Component {\n  render() {\n    let buttons = this.props.keysArray.map(button => {\n      return (\n        <button\n          className=\"calc-button\"\n          id={button.id}\n          key={button.id}\n          onClick={this.props.onClick}\n        >\n          {button.button}\n        </button>\n      );\n    });\n    return <div id={this.props.id}>{buttons}</div>;\n  }\n}\n\nclass Display extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.formatEquationStr = this.formatEquationStr.bind(this);\n    this.checkOpenParenthesis = this.checkOpenParenthesis.bind(this);\n  }\n\n  formatEquationStr(equation) {\n    // -- REGEX GENERAL FORMATTING --\n    let retStr = equation\n      .replace(/\\//g, \" ÷ \")\n      .replace(/\\*/g, \" × \")\n      .replace(/\\+/g, \" + \")\n      .replace(/-/g, \" - \") // '-' -> ' - '\n      .replace(/^\\s-\\s/g, \"-\") // '^ - ' -> '-'\n      .replace(/\\(\\s-\\s/g, \"(-\") // '( - ' -> '(-'\n      .replace(/%/g, \" % \")\n      .replace(/-\\D\\.|^-\\./g, \" -0.\") // (-.21 -> -0.21)\n      .replace(/(\\D)\\.|^\\./g, \" $10.\") // (.21 -> 0.21)\n      .replace(/\\)(?=\\d)/g, \") × \") // (8)6 -> (8) * 6\n      .replace(/\\^\\s-\\s(\\d+\\.?\\d*|Ans|e|pi)?/g, \"<sup>-$1</sup>\")\n      .replace(/\\^(\\d+\\.?\\d*|Ans|e|pi)/g, \"<sup>$1</sup>\")\n      .replace(/\\^$/, \"<sup>□</sup>\")\n      .replace(/log\\(/g, \"ln(\")\n      .replace(/log10\\(/g, \"log(\")\n      .replace(/sqrt/g, \"√\")\n      .replace(/pi/g, \"π\")\n      .replace(/e/g, \"<i>e</i>\");\n\n    // -- FORMAT BRACKET STYLE EXPONENTS (SUPERSCRIPTS) --\n    let start = 0;\n    let brackets = false;\n    let openBrackets = 0;\n    // Search for next exponent (^).\n    for (let i = 0; i < retStr.length; i++) {\n      if (retStr[i] === \"^\") {\n        start = i; // index of ^\n        // Does the exponent have brackets?\n        if (retStr[i + 1] === \"(\") brackets = true;\n        i++; // once we've found ^ we can skip to next index immediately!\n      }\n      // if the exponent has brackets keep a count of the brackets\n      // as they open and close... if the count hits 0 then the\n      // brackets are balanced and the exponent is finished.\n      if (brackets) {\n        if (retStr[i] === \"(\") openBrackets++;\n        if (retStr[i] === \")\") openBrackets--;\n        if (openBrackets === 0 || i === retStr.length - 1) {\n          retStr =\n            retStr.slice(0, start) +\n            \"<sup>\" +\n            retStr.slice(start + 1, i + 1) +\n            \"</sup>\" +\n            retStr.slice(i + 1);\n          brackets = false;\n        }\n      }\n    }\n\n    // -- ADD GUIDE (FAKE) BRACKETS --\n    // check if there are any open brackets in the entire equation\n    let totalOpenBrackets = this.checkOpenParenthesis(retStr);\n    if (totalOpenBrackets) {\n      retStr += \"<span class='guide-parenthesis'>\";\n      // openBrackets was used above to count brackets in exponents\n      // so if it's >0 we have unclosed exponent brackets.\n      if (openBrackets) retStr += \"<sup>\" + \")\".repeat(openBrackets) + \"</sup>\";\n\n      // totalOpenBrackets - openBrackets will equal the number of\n      // non-exponent (non-superscript) open brackets.\n      retStr += \")\".repeat(totalOpenBrackets - openBrackets) + \"</span>\";\n    }\n\n    return retStr;\n  }\n\n  checkOpenParenthesis(str) {\n    var stack = [];\n    for (var i = 0; i < str.length; i++) {\n      if (str[i] === \"(\") stack.push(str[i]);\n      else if (str[i] === \")\")\n        if (stack.pop() !== \"(\") {\n          return false;\n        }\n    }\n\n    return stack.length;\n  }\n\n  render() {\n    return (\n      <div id=\"display\">\n        <div id=\"top-display\">\n          <span>\n            {this.props.showAnswer ? (\n              <span\n                dangerouslySetInnerHTML={{\n                  __html: this.formatEquationStr(this.props.prevEquation) + \" =\"\n                }}\n              ></span>\n            ) : this.props.answer === \"\" ? (\n              \"\"\n            ) : (\n              \"Ans = \" + this.props.answer\n            )}\n          </span>\n        </div>\n        <div id=\"bottom-display\">\n          {this.props.showAnswer ? (\n            <span\n              dangerouslySetInnerHTML={{ __html: this.props.answer }}\n            ></span>\n          ) : this.props.equation === \"\" ? (\n            \"0\"\n          ) : (\n            <span\n              dangerouslySetInnerHTML={{\n                __html: this.formatEquationStr(this.props.equation)\n              }}\n            ></span>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}